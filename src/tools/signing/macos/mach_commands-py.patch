diff --git a/tools/signing/macos/mach_commands.py b/tools/signing/macos/mach_commands.py
index a513ad723805459c194d27b42dac68e9babba468..3a08bb0987f9d6cf01c05f8ebb56efa91a5b9d0e 100644
--- a/tools/signing/macos/mach_commands.py
+++ b/tools/signing/macos/mach_commands.py
@@ -37,7 +37,6 @@ from mozbuild.base import MachCommandConditions as conditions
     "Release channel entitlements, but the configuration used will be the "
     "Release configuration as defined in the repo working directory, not the "
     "configuration from the revision of the earlier 120 build.",
-    conditions=[conditions.is_firefox],
 )
 @CommandArgument(
     "-v",
@@ -342,6 +341,10 @@ def macos_sign(
     cs_reset_cmd = ["find", app, "-exec", "codesign", "--remove-signature", "{}", ";"]
     run(command_context, cs_reset_cmd, capture_output=not verbose_arg)
 
+    originProfile = os.path.join(os.curdir, "embedded.provisionprofile")
+    endProfile = os.path.join(app, "Contents", "embedded.provisionprofile")
+    print(f"ZEN: Moving {originProfile} to {endProfile}")
+    os.rename(originProfile, endProfile)
     if use_rcodesign_arg is True:
         sign_with_rcodesign(
             command_context,
@@ -567,7 +570,7 @@ def sign_with_rcodesign(
     # input path and its options are specified as standard arguments.
     ctx.log(logging.INFO, "macos-sign", {}, "Signing with rcodesign")
 
-    cs_cmd = ["rcodesign", "sign"]
+    cs_cmd = ["rcodesign", "sign", "--for-notarization"]
     if p12_file_arg is not None:
         cs_cmd.append("--p12-file")
         cs_cmd.append(p12_file_arg)
