diff --git a/browser/components/tabbrowser/content/tabs.js b/browser/components/tabbrowser/content/tabs.js
index f9e256b143786c18ba85859ca1b11182ab23f1aa..25eeaf2a61fcef53edcb8d1a45b6e41dc750013a 100644
--- a/browser/components/tabbrowser/content/tabs.js
+++ b/browser/components/tabbrowser/content/tabs.js
@@ -918,7 +918,7 @@
             let postTransitionCleanup = () => {
               tab.removeAttribute("tabdrop-samewindow");
 
-              this._finishAnimateTabMove();
+              this._finishAnimateTabMove(true);
               if (dropIndex !== false) {
                 gBrowser.moveTabTo(tab, dropIndex);
                 if (incrementDropIndex) {
@@ -928,7 +928,7 @@
 
               gBrowser.syncThrobberAnimations(tab);
             };
-            if (gReduceMotion) {
+            if (gReduceMotion || true) {
               postTransitionCleanup();
             } else {
               let onTransitionEnd = transitionendEvent => {
@@ -1077,7 +1077,8 @@
       if (
         dt.mozUserCancelled ||
         dt.dropEffect != "none" ||
-        this._isCustomizing
+        this._isCustomizing ||
+        draggedTab.pinned
       ) {
         delete draggedTab._dragData;
         return;
@@ -1328,7 +1329,7 @@
         }
       }
 
-      this.#allTabs = [...verticalPinnedTabsContainer.children, ...children];
+      this.#allTabs = [...document.getElementById("zen-essentials-container").children, ...verticalPinnedTabsContainer.children, ...children];
       return this.#allTabs;
     }
 
@@ -1520,10 +1521,12 @@
 
     _handleTabSelect(aInstant) {
       let selectedTab = this.selectedItem;
-      if (this.overflowing) {
-        this.arrowScrollbox.ensureElementIsVisible(selectedTab, aInstant);
-      }
+      this.arrowScrollbox.ensureElementIsVisible(selectedTab, aInstant);
 
+      if (!aInstant && Services.prefs.getBoolPref('zen.view.compact')
+          && Services.prefs.getBoolPref('zen.view.compact.toolbar-flash-popup')) {
+        gZenCompactModeManager.flashSidebar();
+      }
       selectedTab._notselectedsinceload = false;
     }
 
@@ -1586,7 +1589,7 @@
         let tabsToReset = [];
         for (let i = numPinned; i < tabs.length; i++) {
           let tab = tabs[i];
-          tab.style.setProperty("max-width", aTabWidth, "important");
+          //tab.style.setProperty("max-width", aTabWidth, "important");
           if (!isEndTab) {
             // keep tabs the same width
             tab.style.transition = "none";
@@ -1657,7 +1660,7 @@
         let tabs = this.visibleTabs;
         for (let i = 0; i < numPinned; i++) {
           tabs[i].style.marginInlineStart = "";
-          verticalTabsContainer.appendChild(tabs[i]);
+          tabs[i].hasAttribute("zen-essential") ? document.getElementById("zen-essentials-container").appendChild(tabs[i]) : verticalTabsContainer.appendChild(tabs[i]);
         }
       }
 
@@ -2140,8 +2143,8 @@
       );
     }
 
-    _finishAnimateTabMove() {
-      if (!this.hasAttribute("movingtab")) {
+    _finishAnimateTabMove(always = false) {
+      if (!this.hasAttribute("movingtab") && !always) {
         return;
       }
 
